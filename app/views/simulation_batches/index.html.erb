<div>
	 <%= render :partial => 'menu', 
               :locals => {:project => :project_id} %>
</div>
<div class="autoscroll">
<table class="index list"> 
	<thead>
	  <tr>
		  <th class='checkbox index-menu-multiple'>
				<%= link_to_function image_tag('toggle_check.png'), {}, :onclick => 'toggleIssuesSelection(Element.up(this, 	
							"form")); return false;', :title => "#{l(:button_check_all)}/#{l(:button_uncheck_all)}" %>
       </th>
    
			<%= sort_header_tag('name', :caption => l(:field_name),:default_order => 'desc') %>
			<%= sort_header_tag('created_at', :caption => l(:field_created_on),:default_order => 'desc') %>
			<%= sort_header_tag('user_id_creator', :caption => l(:field_created_by),:default_order => 'desc') %>
			<th title=<%= l(:label_actions) %>><%= l(:label_actions) %></th>
	  </tr>
	</thead>
	<tbody>
 <% if @item_count == 0 %>
	<tr>
	<td colspan='4' >No records to display</td>
	</tr>
<% else %>
	<% @items_show.each_with_index do |sim,i| %>
	  <tr class="user active <%= i%2==0 ? 'odd' : 'even' %>">
	  <td class='index-menu-multiple'><%= check_box_for_sim(sim) %></td>
		<td  ><%= link_to_function sim.name, "show_box('simulation-info-#{sim.id}');" %></td>
	 	<td  ><%=h format_date_time(sim.created_at) %></td>
	 	<td  ><%= link_to sim.creator, sim.creator %></td>
	 	<td  >
			<%= link_to '',delete_report_project_simulation_batch_path(@project,sim.id), :confirm=>  l(:label_delete_item), :class => 'icon icon-del' %> | 
			<%= link_to_function '', "show_box('rename-#{sim.id}');", :class => 'icon icon-edit' %> 
		</td>
	  </tr>

	<% end %>
<% end %>

   </tbody>

</table>

<% @items_show.each_with_index do |sim,i| %>
	<div class="simulation-info" id="simulation-info-<%= sim.id %>" style="display: none;">
		<button class="simulation-overlay-cancel config" id="<%= sim.id %>-overlay-cancel" onClick="hide_box('simulation-info-<%= sim.id %>')"></button>
		  <h2>Simulation Data Information</h2>
	  	<%= render :partial => 'show', 
	             :locals => {:item_show => sim} %>
	</div>
	<div class="simulation-info" id="rename-<%= sim.id %>" style="display: none;">
		<button class="simulation-overlay-cancel config" id="<%= sim.id %>-overlay-cancel" onClick="hide_box('rename-<%= sim.id %>')"></button>
		  <h2>Rename: <%= sim.name %></h2>
	  	<%= render :partial => 'rename', 
	             	 :locals => {:item_show => sim} %>
	</div>
<% end %>

	<div id="report-generator" style="display:none;" class="box tabular">
		<button class="simulation-overlay-cancel config" id="report-generator-overlay-cancel" onClick="resetPage()"></button>
  	<%= render :partial => 'simulation_batches/report_generator/form'%>
	</div>


</div>
<% if @item_count != 0 %>
	<p class="pagination"><%= pagination_links_full @item_pages, @item_count %></p>
<% end %>
<script language="javascript">
	function processSimIds(){
		//this maintains the list of batches on the Basics and Scatter Groups tab of report generator
		
		var sp = jQuery('#simulation-batch-list');
		var spGroupTable = jQuery('#simulation-group-list-table > tbody:last');
		var strSimIds = '';

		var spBegin = jQuery('#begin-msg');
		if(spBegin.length > 0)
			spBegin.remove();
		
		var spNoRecords = jQuery('#simulation-group-list-no-records');
		spNoRecords.remove();

		var sims = jQuery("input[name='sim_ids[]']:checked");
		//first remove all previous records
		sims.each(function(){
		  //split the checkbox id from id:name
				var split = jQuery(this).val().split(':');
				var sim_id = split[0];
				var sim_name =  split[1];

				jQuery('#sim_li_' + replaceAllSpaces(sim_name)).remove();
				jQuery('#sim_group_' + replaceAllSpaces(sim_name)).remove();
			
			
		});

		//now add in everything that is checked
		sims.each(function(){
		  //split the checkbox id from id:name
			var split = jQuery(this).val().split(':');
			var sim_id = split[0];
			var sim_name =  split[1]
			sp.append("<li id='sim_li_" + replaceAllSpaces(sim_name) + "'>" + sim_name + "</li>");
			
		  //this maintains the hidden tag of sim_ids
		  if(strSimIds.length > 0)
					strSimIds  += "," + sim_id;
			else
				  strSimIds  = sim_id;


			spGroupTable.append("<tr id='sim_group_" + replaceAllSpaces(sim_name) + "' class='user'><td>" + sim_name + "</td><td><input type='text' size='30' name='simulation_batch[" +sim_id+"][group]'></td></tr>");

		});
		
		jQuery('#sim_ids').value = strSimIds;
		
		//in case a mistake is made append begin message
		if(sp.children().length == 0){
			sp.append("<span id='begin-msg'>Please close this window and select a batch(es) for the report generator to 					reference.</span>")
		}
		
		spGroupRows = jQuery('#simulation-group-list-table tr').length;
		if(spGroupRows == 1)
		{
			spGroupTable.append("<td colspan='2'>No records to display.</td>");
		}
	}
	

  function replaceAllSpaces(str)
	{
		while(str.search(" ") != -1)
		{
				str = str.replace(" ", "-");
		}
		return str;
	}
  
  function validateAtLeastOneSimChecked(){
		var nbChecked = jQuery("input:checked[id*=checkbox]").size(); //find all checked checkboxes + radio buttons  
		if(nbChecked > 0)
			return true;
		return false;
	}
	
	function resetPage(){
		hide_box('report-generator'); 
		jQuery('#simulation_batch_action').val('');
	}

	
	function insertScatterPlotGroups()
	{
		var groups_array = new Array();
		jQuery('#simulation-plots-list-no-records').remove();
		var group_texts = jQuery("#simulation-group-list-table tr").find("input:text");
		var spPlotsTableBody = jQuery('#simulation-plots-list-table > tbody').children('tr').remove();
		var spPlotsTableRow = jQuery('#simulation-plots-list-table > tbody:last');
		var el = '';
		
		group_texts.each(function(){
			el = jQuery(this);
			if(groups_array.indexOf(el.val()) == -1){
				groups_array[groups_array.length] = el.val();
				spPlotsTableRow.append("<tr id='sim_plot_" + el.val() + "' class='user'><td>" + el.val() + "</td><td><input type='text' size='30' name='simulation_batch[" + el.val() + "][plot]' ></td></tr>");
			}
		});
	}
	
	var ol = new Overlay();

</script>
